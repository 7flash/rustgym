[config]
default_to_workspace = false

[tasks.rm_sqlite]
script = ["rm rustgym.sqlite"]

[tasks.migration]
script = ["diesel migration run --database-url rustgym.sqlite"]

[tasks.readme]
script = ["cargo run --bin rustgym-readme"]
dependencies = ["rm_sqlite", "migration"]

[tasks.mac]
script = 'docker run --rm --user "$(id -u)":"$(id -g)" -v "$PWD":/usr/src/myapp -w /usr/src/myapp rust:1.48.0 cargo build --release'

[tasks.linux]
script = 'cargo build --release --verbose'

[tasks.copy-server]
script = 'cp target/release/rustgym-server rustgym-server'

[tasks.wasm-pack]
script = 'wasm-pack build wasm --target web --out-dir ../pkg'

[tasks.archive-wasm]
script = "tar -czvf pkg.tar.gz pkg"

[tasks.watch-wasm]
run_task = { name = ["wasm-pack"] }
watch = { postpone = true, watch = ["./wasm/", "./message/"] }

[tasks.deploy]
script = [
    "echo $TAG",
    "git tag $TAG",
    "git push origin $TAG",
    "gh release create $TAG rustgym.sqlite rustgym-server pkg.tar.gz"
]
dependencies = ["readme", "mac", "copy-server", "wasm-pack", "archive-wasm"]

[tasks.watch-server]
script = "cargo watch -w server -w message -x 'run --bin rustgym-server'"

[tasks.dev]
run_task = { name = ["watch-server", "watch-wasm"], parallel = true }

[tasks.restart]
script = "cd infra; ./deploy.sh"
dependencies = ["deploy"]
