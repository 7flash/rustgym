name: Release

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: update apt
        run: sudo apt-get update
      - name: Install libudev
        run: sudo apt-get install -y libudev-dev
      - name: Stable with rustfmt and clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Install cargo-make
        run: cargo install cargo-make --verbose
      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
      - name: Create ignore.env
        run: touch infra/ignore.env
      - name: Run wasm test
        run: cargo make wasm-test

      - name: Install diesel_cli
        run: cargo install diesel_cli --no-default-features --features sqlite
      - name: Build release
        run: cargo build --verbose --release
      - name: Archive bin
        run: cargo make bin-pack
      - name: Build wasm
        run: cargo make wasm-pack
      - name: Archive wasm
        run: cargo make archive-wasm
      - name: Archive static
        run: cargo make archive-static
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload bin
        id: upload-bin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin.tar.gz
          asset_name: bin.tar.gz
          asset_content_type: application/octet-stream
      - name: Upload pkg
        id: upload-pkg
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pkg.tar.gz
          asset_name: pkg.tar.gz
          asset_content_type: application/octet-stream
      - name: Upload static
        id: upload-static
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./static.tar.gz
          asset_name: static.tar.gz
          asset_content_type: application/octet-stream
